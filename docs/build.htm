<html>

<head>
	<title>Zambezii Kernel Documentation::Building the kernel.</title>
</head>

<body>
	<p>
		<h1>Requirements</h1>
		<ul>
			<li>A GNU ELF producing cross toolchain for your
				architecture</li>
			<li>GNU Make or a compatible version.</li>
			<li>A shell from which your version of 'make' can pull
				environment variables.</li>
			<li>Common sense.</li>
		</ul>
	</p>
	<p>
		<h1>Procedure</h1>
		<ol>
			<li>Set the following 'Z' toolchain environment
				variables (globally); They should be set to the
				corresponding tools to invoke your chosen cross
				toolchain. The kernel will set these to GNU
				Make's implict rule vars while building. Of
				course, you should add any flags to the *FLAGS
				vars.
				<ul>
					<li>ZCC and ZCCFLAGS</li>
					<li>ZCXX and ZCXXFLAGS</li>
					<li>ZCPP and ZCPPFLAGS</li>
					<li>ZAS and ZASFLAGS</li>
					<li>ZLD and ZLDFLAGS</li>
					<li>ZAR and ZARFLAGS</li>
				</ul>
			</li>
			<li>Then set these environment variables as well; These
				are required to point your local machine's
				compiler: the kernel builds a utility called
				'ekfsutil' which must be able to run on the
				machine on which you are building. When
				compiling a native program, the kernel will
				temporarily switch GNU Make's implicit rule vars
				to point to the values you give here.
				<ul>
					<li>LCC and LCCFLAGS</li>
					<li>LCXX and LCXXFLAGS</li>
					<li>LCPP and LCPPFLAGS</li>
					<li>LAS and LASFLAGS</li>
					<li>LLD and LLDFLAGS</li>
					<li>LAR and LARFLAGS</li>
				</ul>
			</li>
			<li>Now set up the architecture, chipset and firmware
				for which you're about to build by setting these
				environment variables; The kernel uses these to
				determine which sub-directories to build for
				your platform.
				<ul>
					<li>ZARCH</li>
					<li>ZCHIPSET</li>
					<li>ZFIRMWARE</li>
				</ul>
			</li>
			<li>Enter a shell prompt on the machine on which you're
				building Zambezii.</li>
			<li>Type make.</li>
			<li>That is all.</li>
		</ol>
	</p>
</body>

</html>

